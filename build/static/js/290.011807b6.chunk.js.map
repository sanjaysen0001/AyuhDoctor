{"version":3,"sources":["views/apps/socialmedia/SocialMedia.js"],"names":["i","SocialMedia","state","rowData","paginationPageSize","currenPageSize","getPageSize","select_sslmedia","url","defaultColDef","sortable","editable","resizable","suppressMenu","inputList","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","mobile","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","handleSelect","e","setState","target","value","handleAdd","payload","axiosConfig","post","getAllData","changeHandler","name","get","then","response","onGridReady","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","id","console","log","error","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","type","onChange","required","placeholder","tag","length","right","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/290.011807b6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass SocialMedia extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    select_sslmedia: \"\",\r\n    url: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n      inputList: \"\",\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Media Name\",\r\n        field: \"mediaName\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.select_sslmedia}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Link\",\r\n        field: \"astrologername\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.url}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"reason\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.mobile}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Action\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/userride/viewUserRide/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() => history.push(\"/app/userride/editUserRide\")}\r\n                  />\r\n                )}\r\n              />\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  handleSelect = (e) => {\r\n    this.setState({ select_sslmedia: e.target.value });\r\n  };\r\n  handleAdd = async () => {\r\n    let payload = {\r\n      select_sslmedia: this.state.select_sslmedia,\r\n      url: this.state.url,\r\n    };\r\n\r\n    await axiosConfig.post(\"/admin/add_SocialMedia\", payload);\r\n    this.getAllData();\r\n    this.setState({ url: \"\" });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  getAllData = async () => {\r\n    await axiosConfig.get(\"/admin/get_socalList\").then((response) => {\r\n      let rowData = response.data.data;\r\n      this.setState({ rowData });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getAllData();\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    await axiosConfig.get(`/admin/dlt_socailMedia/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Social Media \"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\"Social Media \"\r\n        />\r\n\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"select_sslmedia\"\r\n                    onChange={(e) => this.handleSelect(e)}\r\n                  >\r\n                    <option>Select Option</option>\r\n                    <option>Facebook</option>\r\n                    <option>Twitter</option>\r\n                    <option>Instagram</option>\r\n                    <option>LinkedIn</option>\r\n                    <option>Youtube</option>\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"url\"\r\n                    placeholder=\"\"\r\n                    value={this.state.url}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Route\r\n                    render={() => (\r\n                      <Button\r\n                        className=\" btn btn-success\"\r\n                        onClick={this.handleAdd}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SocialMedia;\r\n"],"sourceRoot":""}