{"version":3,"sources":["views/apps/setting/moc/MOCList.js"],"names":["i","MOSList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","name","className","color","size","onClick","history","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axios","get","then","response","console","log","id","error","this","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/289.c7c23af8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nclass MOSList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 150,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: \"Master Oil Company\",\r\n        field: \"name\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Active\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : params.value === \"Inactive\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        // field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Eye\r\n                className=\"mr-50\"\r\n                color=\"green\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/setting/moc/viewMOC/${params.data._id}`)\r\n                }\r\n              /> */}\r\n              <Edit\r\n                className=\"mr-50\"\r\n                color=\"blue\"\r\n                size={20}\r\n                onClick={() =>\r\n                  history.push(`/app/setting/moc/editMOC/${params.data._id}`)\r\n                }\r\n              />\r\n              <Trash2\r\n                size={20}\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axios\r\n      .get(`http://3.108.185.7/nodejs/api/dealer/allMasterOilCompany`)\r\n      .then((response) => {\r\n        const rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axios\r\n      .get(`http://3.108.185.7/nodejs/api/dealer/deletebank/${id}`)\r\n      .then(\r\n        (response) => {\r\n          console.log(response);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    MOC List\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/setting/moc/addMOC\")}\r\n                  >\r\n                    ADD MOC\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default MOSList;\r\n"],"sourceRoot":""}