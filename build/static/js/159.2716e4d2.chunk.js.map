{"version":3,"sources":["views/apps/VideoYoutube/Youtube.js","../node_modules/reactstrap/es/Label.js"],"names":["i","Youtube","state","rowData","paginationPageSize","currenPageSize","getPageSize","link","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","createdAt","className","youtube_link","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","getAllList","axiosConfig","get","then","response","setState","onGridReady","api","gridColumnApi","columnApi","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","handleAddVideo","payload","post","res","swal","catch","err","console","log","this","props","match","id","error","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","lg","type","name","value","onChange","e","target","tag","length","right","placeholder","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","children","node","hidden","check","for","tagPropType","cssModule","object","xs","md","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","createElement","_extends"],"mappings":"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","file":"static/js/159.2716e4d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Label,\r\n} from \"reactstrap\";\r\n\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport swal from \"sweetalert\";\r\n\r\n//import classnames from \"classnames\";\r\n// import axiosConfig from \"../../../axiosConfig\";\r\n\r\nclass Youtube extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    link: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"createdAt\",\r\n        field: \"createdAt\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data?.createdAt}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"youtube_link\",\r\n        field: \"youtube_link\t\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data?.youtube_link}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/customer/viewCustomer/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              /> */}\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() => history.push(\"/app/customer/editCustomer\")}\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  getAllList = () => {\r\n    axiosConfig.get(\"/admin/video_list\").then((response) => {\r\n      let rowData = response.data.data;\r\n      //   console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n\r\n    this.getAllList();\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/admin/dlt_video/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  handleAddVideo = () => {\r\n    if (this.state.link) {\r\n      let payload = {\r\n        youtube_link: this.state.link,\r\n      };\r\n      axiosConfig\r\n        .post(`/admin/video`, payload)\r\n        .then((res) => {\r\n          swal(\"Video Added Successfully\");\r\n          this.setState({ link: \"\" });\r\n          this.getAllList();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else swal(\"Enter YouTube ID\");\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      //   console.log(rowData),\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"YouTube\"\r\n          breadCrumbParent=\"Home\"\r\n          breadCrumbActive=\" Youtube Video\"\r\n        />\r\n\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    List of Youtube Video\r\n                  </h1>\r\n                </Col>\r\n                {/* <Col>\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          className=\" btn btn-danger float-right\"\r\n                          onClick={() =>\r\n                            history.push(\"/app/customer/addCustomer\")\r\n                          }\r\n                        >\r\n                          Add Videos\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col> */}\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"3\">\r\n                  <div className=\"container mx-2\">\r\n                    <Label>Enter YouTube Video Id</Label>\r\n                    <Input\r\n                      type=\"URL\"\r\n                      name=\"link\"\r\n                      className=\"form-control\"\r\n                      value={this.state.link}\r\n                      onChange={(e) => this.setState({ link: e.target.value })}\r\n                    />\r\n                  </div>\r\n                </Col>\r\n                <Col lg=\"4\">\r\n                  <div className=\"d-flex justify-content-start\">\r\n                    <Button\r\n                      className=\" btn btn-success float-right mt-2\"\r\n                      onClick={this.handleAddVideo}\r\n                    >\r\n                      Add Video\r\n                    </Button>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Youtube;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;"],"sourceRoot":""}