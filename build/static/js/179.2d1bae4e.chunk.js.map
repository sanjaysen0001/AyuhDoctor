{"version":3,"sources":["views/apps/horoscopes/HoroscopesList.js"],"names":["i","HoroscopesList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","title","className","category","desc","rashiId","map","rashi","key","_id","rashi_title","ReactHtmlParser","sort_desc","long_desc","date","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","props","match","id","axiosConfig","get","then","response","console","log","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","tag","length","size","right","onClick","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/179.2d1bae4e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  CustomInput,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass HoroscopesList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 90,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Title\",\r\n        field: \"title\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.title}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Category Description\",\r\n        field: \"desc\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.category?.desc}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Rashi Title\",\r\n        field: \"rashi_title\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              {params.data.rashiId?.map((rashi) => (\r\n                <span key={rashi._id}>{rashi?.rashi_title}</span>\r\n              ))}\r\n              {/* <span>{params.data.rashiId?.rashi_title}</span> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Rashi Description\",\r\n        field: \"desc\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              {params.data.rashiId?.map((rashi) => (\r\n                <span key={rashi._id}>{rashi?.desc}</span>\r\n              ))}\r\n              {/* <span>{params.data.rashiId?.desc}</span> */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Short Description\",\r\n        field: \"sort_desc\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{ReactHtmlParser(params.data.sort_desc)}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Long Description\",\r\n        field: \"long_desc\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{ReactHtmlParser(params.data.long_desc)}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"date\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              {/* <span>{params.data.rashiId?.date}</span> */}\r\n              {params.data.rashiId?.map((rashi) => (\r\n                <span key={rashi._id}>{rashi?.date}</span>\r\n              ))}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"status\",\r\n      //   filter: true,\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return params.value === \"Active\" ? (\r\n      //       <div className=\"badge badge-pill badge-success\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : params.value === \"Deactive\" ? (\r\n      //       <div className=\"badge badge-pill badge-warning\">\r\n      //         {params.data.status}\r\n      //       </div>\r\n      //     ) : null;\r\n      //   },\r\n      // },\r\n\r\n      // {\r\n      //   headerName: \"Action\",\r\n      //   field: \"sortorder\",\r\n      //   width: 120,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"actions cursor-pointer\">\r\n      //          <Route\r\n      //           render={({ history }) => (\r\n      //             <Eye\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"green\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/horoscopes/viewHoroscopes/${params.data._id}`\r\n      //                 )\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n      //         <Route\r\n      //           render={({ history }) => (\r\n      //             <Edit\r\n      //               className=\"mr-50\"\r\n      //               size=\"25px\"\r\n      //               color=\"blue\"\r\n      //               onClick={() =>\r\n      //                 history.push(\r\n      //                   `/app/horoscopes/editHoroscopes/${params.data._id}`\r\n      //                 )\r\n      //               }\r\n      //             />\r\n      //           )}\r\n      //         />\r\n      //         <Trash2\r\n      //           className=\"mr-50\"\r\n      //           size=\"25px\"\r\n      //           color=\"red\"\r\n      //           onClick={() => {\r\n      //             let selectedData = this.gridApi.getSelectedRows();\r\n      //             this.runthisfunction(params.data._id);\r\n      //             this.gridApi.updateRowData({ remove: selectedData });\r\n      //           }}\r\n      //         />\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n\r\n    await axiosConfig\r\n      .get(`/admin/rashi_by_category/63747d27be3fdda1e80b5a31`)\r\n      .then((response) => {\r\n        let rowData = response.data.data;\r\n        console.log(rowData);\r\n        this.setState({ rowData });\r\n      });\r\n  }\r\n\r\n  // async runthisfunction(id) {\r\n  //   console.log(id);\r\n  //   await axiosConfig.get(`/admin/delproduct/${id}`).then(\r\n  //     (response) => {\r\n  //       console.log(response);\r\n  //     },\r\n  //     (error) => {\r\n  //       console.log(error);\r\n  //     }\r\n  //   );\r\n  // }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <div>\r\n          <Breadcrumbs\r\n            breadCrumbTitle=\"All Horoscopes\"\r\n            breadCrumbParent=\"Horoscopes\"\r\n            breadCrumbActive=\"Horoscopes List\"\r\n          />\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <Row className=\"m-2\">\r\n                  <Col>\r\n                    <h1 sm=\"6\" className=\"float-left\">\r\n                      All Horoscopes List\r\n                    </h1>\r\n                  </Col>\r\n                  {/* <Col>\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          className=\" btn btn-success float-right\"\r\n                          onClick={() =>\r\n                            history.push(\r\n                              \"/app/Horoscopes/addHoroscopes\"\r\n                            )\r\n                          }\r\n                        >\r\n                          Add\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col> */}\r\n                </Row>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default HoroscopesList;\r\n"],"sourceRoot":""}