{"version":3,"sources":["AyuhDoctor/Appointment.js"],"names":["i","Appointment","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","render","history","size","color","onClick","push","data","_id","gridApi","getSelectedRows","runthisfunction","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","swal","buttons","cancel","catch","text","value","componentDidMount","error","this","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/218.6735f1c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../axiosConfig\";\r\nimport { ContextLayout } from \"../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport {  Eye, Edit,Trash2, ChevronDown } from \"react-feather\";\r\nimport \"../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n// import SwitchEvent from \"../forms/form-elements/switch/SwitchEvent\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass Appointment extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n    //   {\r\n    //     headerName: \"Image\",\r\n    //     field: \"userimg\",\r\n    //     filter: false,\r\n    //     width: 100,\r\n    //     setColumnVisible: false,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           {params.data.userimg.map((i) => (\r\n    //             <img\r\n    //               className=\" rounded-circle  mr-3\"\r\n    //               src={i}\r\n    //               alt=\"user avatar\"\r\n    //               height=\"40\"\r\n    //               width=\"40\"\r\n    //             />\r\n    //           ))}\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n    {\r\n      headerName: \"Appointment No.\",\r\n      field: \"appointmentno\",\r\n      filter: true,\r\n      width: 200,\r\n      cellRendererFramework: (params) => {\r\n        return (\r\n          <div>\r\n          {/* \r\n            <span>{params.data.fullname}</span>\r\n           */}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n      {\r\n        headerName: \"Patient Name\",\r\n        field: \"patientname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n\r\n              {/* \r\n            <span>{params.data.fullname}</span>\r\n           */}\r\n             \r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Doctor Name\",\r\n        field: \"doctorname\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n            {/* \r\n            <span>{params.data.fullname}</span>\r\n           */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n    //   {\r\n    //     headerName: \"Email ID\",\r\n    //     field: \"email\t\",\r\n    //     filter: true,\r\n    //     width: 150,\r\n    //     cellRendererFramework: (params) => {\r\n    //       return (\r\n    //         <div className=\"d-flex align-items-center cursor-pointer\">\r\n    //           <span>{params.data.email}</span>\r\n    //         </div>\r\n    //       );\r\n    //     },\r\n    //   },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 180,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              {/* \r\n            <span>{params.data.fullname}</span>\r\n           */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"DOB\",\r\n      //   field: \"dob\t\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div className=\"d-flex align-items-center cursor-pointer\">\r\n      //         <span>{params.data.email}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n//       {\r\n//         headerName: \" Time\",\r\n//         field: \"time\",\r\n//         filter: true,\r\n//         width: 120,\r\n//         cellRendererFramework: (params) => {\r\n//           return (\r\n//             <div>\r\n//             {/* \r\n//               <span>{params.data?.createdAt.split(\"T\")[1].split(\".\")[0]}</span>\r\n// */}\r\n\r\n//             </div>\r\n//           );\r\n//         },\r\n//       },\r\n      {\r\n        headerName: \" Date & Time\",\r\n        field: \"date&time\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              {/* \r\n            <span>{params.data.fullname}</span>\r\n           */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Amount\",\r\n        field: \"amount\",\r\n        filter: true,\r\n        width: 160,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              {/* \r\n            <span>{params.data.fullname}</span>\r\n           */}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      // {\r\n      //   headerName: \"Status\",\r\n      //   field: \"dateofregister\",\r\n      //   filter: true,\r\n      //   width: 150,\r\n      //   cellRendererFramework: (params) => {\r\n      //     return (\r\n      //       <div>\r\n      //         <span>{params.data.status}</span>\r\n      //       </div>\r\n      //     );\r\n      //   },\r\n      // },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n               \r\n              <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(`/View-appointment/${params.data._id}`)\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n             \r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(`/Edit-appointment/${params.data._id}`)\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              \r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  // this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n              \r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    await axiosConfig.get(`/admin/alluser`).then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    swal(\r\n      `Sure You Want To Delete It`,\r\n      \"Delete Or Cancel\",\r\n\r\n      {\r\n        buttons: {\r\n          cancel: \"Cancel\",\r\n          catch: { text: \"Delete \", value: \"delete\" },\r\n        },\r\n      }\r\n    ).then((value) => {\r\n      switch (value) {\r\n        case \"delete\":\r\n          axiosConfig.get(`/admin/dltuser/${id}`).then(\r\n            (response) => {\r\n              this.componentDidMount();\r\n              console.log(response);\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n            }\r\n          );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <div>\r\n        <h2>Appintment</h2>\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                \r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default Appointment;\r\n"],"sourceRoot":""}