{"version":3,"sources":["views/apps/productmanager/category/AddCategory.js"],"names":["AddCategory","state","astroId","name","img","desc","status","editorState","EditorState","createEmpty","selectedFile","undefined","selectedName","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","onEditorStateChange","setState","draftToHtml","convertToRaw","getCurrentContent","onChangeHandler","event","target","files","console","log","changeHandler1","e","value","changeHandler","submitHandler","preventDefault","props","match","params","values","keys","key","id","axiosConfig","post","then","history","push","catch","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","onClick","onSubmit","this","lg","md","sm","required","type","placeholder","onChange","multiple","wrapperClassName","editorClassName","toolbar","inline","inDropdown","list","textAlign","link","image","uploadCallback","previewImage","alt","present","mandatory","style","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/265.c9b46c67.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\n// import { data } from \"jquery\";\r\n// import swal from \"sweetalert\";\r\n\r\nexport class AddCategory extends Component {\r\n  state = {\r\n    astroId: \"\",\r\n    name: \"\",\r\n    img: \"\",\r\n    desc: \"\",\r\n    status: \"\",\r\n    editorState: EditorState.createEmpty(),\r\n    selectedFile: undefined,\r\n    selectedName: \"\",\r\n  };\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n      xhr.setRequestHeader(\"Authorization\", \"Client-ID 7e1c3e366d22aa3\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        resolve(response);\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files });\r\n    this.setState({ selectedName: event.target.files.name });\r\n    console.log(event.target.files);\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.props.match.params, this.state);\r\n    const data = new FormData();\r\n    data.append(\"astroId\", this.state.astroId);\r\n    data.append(\"name\", this.state.name);\r\n    data.append(\"desc\", this.state.desc);\r\n    data.append(\"status\", this.state.status);\r\n    for (const file of this.state.selectedFile) {\r\n      if (this.state.selectedFile !== null) {\r\n        data.append(\"img\", file, file.name);\r\n      }\r\n    }\r\n    for (var value of data.values()) {\r\n      console.log(value);\r\n    }\r\n    for (var key of data.keys()) {\r\n      console.log(key);\r\n    }\r\n    // console.log(this.props.match.params, this.state);\r\n\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`/admin/addProductcategory`, data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.props.history.push(\"/app/productmanager/category/categoryList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Add Category\"\r\n          breadCrumbParent=\" Product Management\"\r\n          breadCrumbActive=\"Add Category\"\r\n        />\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Category\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/productmanager/category/categoryList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Category Name</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Category Name\"\r\n                    value={this.state.name}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Thumnail image</Label>\r\n\r\n                  <Label>Image</Label>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.onChangeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label> Description</Label>\r\n\r\n                  <br />\r\n\r\n                  <Editor\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      inline: { inDropdown: true },\r\n                      list: { inDropdown: true },\r\n                      textAlign: { inDropdown: true },\r\n                      link: { inDropdown: true },\r\n                      history: { inDropdown: true },\r\n                      image: {\r\n                        uploadCallback: this.uploadImageCallBack,\r\n                        previewImage: true,\r\n                        alt: { present: true, mandatory: true },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Save\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddCategory;\r\n"],"sourceRoot":""}