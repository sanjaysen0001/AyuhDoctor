{"version":3,"sources":["views/apps/productmanager/product/AddProduct.js"],"names":["i","AddProduct","props","onChangeHandler","event","setState","selectedFile","target","files","selectedName","name","console","log","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","onEditorStateChange","editorState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler1","e","status","value","changeHandler","submitHandler","preventDefault","state","title","productname","category","price","qsCount","axiosConfig","post","then","swal","history","push","catch","image","limit","undefined","EditorState","createEmpty","categoryP","get","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","onClick","onSubmit","this","lg","md","sm","required","type","placeholder","onChange","map","allCategory","_id","key","multiple","wrapperClassName","editorClassName","toolbar","inline","inDropdown","list","textAlign","link","uploadCallback","previewImage","alt","present","mandatory","style","marginRight","Ripple","color","Component"],"mappings":"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","file":"static/js/267.3be50b4a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport { data } from \"jquery\";\r\nimport swal from \"sweetalert\";\r\nexport class AddProduct extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      productname: \"\",\r\n      category: \"\",\r\n      image: \"\",\r\n      desc: \"\",\r\n      qsCount: \"\",\r\n      price: \"\",\r\n      limit: \"\",\r\n      selectedFile: undefined,\r\n      selectedName: \"\",\r\n      status: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n    this.state = {\r\n      categoryP: [],\r\n    };\r\n  }\r\n\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files[0] });\r\n    this.setState({ selectedName: event.target.files[0].name });\r\n    console.log(event.target.files[0]);\r\n  };\r\n  onChangeHandler = (event) => {\r\n    this.setState({ selectedFile: event.target.files });\r\n    this.setState({ selectedName: event.target.files.name });\r\n    console.log(event.target.files);\r\n  };\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n      xhr.setRequestHeader(\"Authorization\", \"Client-ID 7e1c3e366d22aa3\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        resolve(response);\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  async componentDidMount() {\r\n    axiosConfig\r\n      .get(\"/admin/getproductcalegory\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          categoryP: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData();\r\n    data.append(\"title\", this.state.title);\r\n    data.append(\"productname\", this.state.productname);\r\n    data.append(\"category\", this.state.category);\r\n    data.append(\"desc\", this.state.desc);\r\n    data.append(\"price\", this.state.price);\r\n    data.append(\"qsCount\", this.state.qsCount);\r\n    // data.append(\"limit\", this.state.limit);\r\n\r\n    data.append(\"status\", this.state.status);\r\n\r\n    for (const file of this.state.selectedFile) {\r\n      if (this.state.selectedFile !== null) {\r\n        data.append(\"image\", file);\r\n      }\r\n    }\r\n    // for (var value of data.values()) {\r\n    //   console.log(value);\r\n    // }\r\n    // for (var key of data.keys()) {\r\n    //   console.log(key);\r\n    // }\r\n\r\n    axiosConfig\r\n      .post(`/admin/addProduct`, data)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        swal(\"Product Added Successful\");\r\n        this.props.history.push(\"/app/productmanager/product/productList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // blockInvalidChar = (e) => {\r\n  //   e.target.value > 50 ||\r\n  //     ([\"e\", \"E\", \"+\", \"-\"].includes(e.key) && e.preventDefault());\r\n  // };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Add Product\"\r\n          breadCrumbParent=\" Product Management\"\r\n          breadCrumbActive=\"Add Product\"\r\n        />\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Product\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/productmanager/product/productList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Product Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"Enter Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Product Name</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"productname\"\r\n                    placeholder=\"Enter Product Name\"\r\n                    value={this.state.productname}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Product Category</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Product Category</option>\r\n                    {this.state.categoryP?.map((allCategory) => (\r\n                      <option value={allCategory?._id} key={allCategory?._id}>\r\n                        {allCategory?.name}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Price(MRP)</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"price\"\r\n                    placeholder=\"Enter price\"\r\n                    value={this.state.price}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Set No of Question </Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"qsCount\"\r\n                    placeholder=\"Enter No of Question \"\r\n                    value={this.state.qsCount}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n                {/* <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label> * Limit(50)</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"limit\"\r\n                    onKeyDown={this.blockInvalidChar}\r\n                    min=\"0\"\r\n                    max=\"50\"\r\n                    placeholder=\"Enter limit max is 50\"\r\n                    value={this.state.limit}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col> */}\r\n                <Col lg=\"4\" md=\"4\" sm=\"4\" className=\"mb-2\">\r\n                  <Label>Thumnail Image</Label>\r\n\r\n                  <Label>Image</Label>\r\n                  <CustomInput\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={this.onChangeHandler}\r\n                  />\r\n                </Col>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n\r\n                  <br />\r\n\r\n                  <Editor\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      inline: { inDropdown: true },\r\n                      list: { inDropdown: true },\r\n                      textAlign: { inDropdown: true },\r\n                      link: { inDropdown: true },\r\n                      history: { inDropdown: true },\r\n                      image: {\r\n                        uploadCallback: this.uploadImageCallBack,\r\n                        previewImage: true,\r\n                        alt: { present: true, mandatory: true },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddProduct;\r\n"],"sourceRoot":""}