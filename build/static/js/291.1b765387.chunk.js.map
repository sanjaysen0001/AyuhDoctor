{"version":3,"sources":["views/apps/transaction/TransactionHistory.js"],"names":["i","TransactionHistory","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","astroid","fullname","mobile","userid","recharge_planId","minute","conversationId","type","beforeAmt","deductedAmt","finalAmt","status","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","props","match","axiosConfig","get","then","response","console","log","error","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/291.1b765387.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\n\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport \"../../../assets/scss/pages/users.scss\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Route } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n//import classnames from \"classnames\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n\r\nclass TransactionHistory extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Doctor Name\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.astroid?.fullname}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Doctor Mob. No.\",\r\n        field: \"mobile\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.astroid?.mobile}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"User Name\",\r\n        field: \"fullname\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.userid?.fullname}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"User Mob. No.\",\r\n        field: \"mobile\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.userid?.mobile}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Conversation Time\",\r\n        field: \"minute\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.recharge_planId?.minute}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Conversation ID\",\r\n        field: \"conversationId\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.conversationId}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Conversation Type\",\r\n        field: \"type\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.type}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Previous Amount\",\r\n        field: \"beforeAmt\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.beforeAmt}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Deducted Amount\",\r\n        field: \"deductedAmt\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.deductedAmt}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Total Amount\",\r\n        field: \"finalAmt\",\r\n        filter: true,\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.finalAmt}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        // filter: true,\r\n        width: 130,\r\n        cellRendererFramework: (params) => {\r\n          // return params.value === \"Active\" ? (\r\n          //   <div className=\"badge badge-pill badge-success\">\r\n          //     {params.data.status}\r\n          //   </div>\r\n          // ) : params.value === \"Deactive\" ? (\r\n          //   <div className=\"badge badge-pill badge-warning\">\r\n          //     {params.data.status}\r\n          //   </div>\r\n          // ) : null;\r\n\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span> {params.data.status}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 200,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/customer/viewCustomer/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              /> */}\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() => history.push(\"/app/customer/editCustomer\")}\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n   let {_id } = this.props.match.params;  \r\n\r\n    await axiosConfig.get(\"user/admin_walletHistory\").then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(_id) {\r\n\r\n     console.log(_id);\r\n    await axiosConfig.get(`/admin/delete_walletHistory/${_id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Transaction History List\r\n                  </h1>\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default TransactionHistory;\r\n"],"sourceRoot":""}