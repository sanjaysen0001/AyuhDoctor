{"version":3,"sources":["views/apps/event/bennerPooja/BannerPoojaList.js"],"names":["i","BannerPoojaList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","data","title","setColumnVisible","className","img","map","src","alt","height","size","color","onClick","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","error","this","breadCrumbTitle","breadCrumbParent","breadCrumbActive","sm","render","history","push","tag","length","right","placeholder","onChange","e","target","value","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/258.0c425b8a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\n// import ReactHtmlParser from \"react-html-parser\";\r\n\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\n// import axios from \"axios\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass BannerPoojaList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        filter: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Title\",\r\n        field: \"title\",\r\n        filter: true,\r\n        width: 290,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div>\r\n              <span>{params.data.title}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Image\",\r\n        field: \"img\",\r\n        filter: false,\r\n        width: 220,\r\n        setColumnVisible: false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              {params.data.img.map((i) => (\r\n                <img\r\n                  className=\" rounded-circle  mr-3\"\r\n                  src={i}\r\n                  alt=\"user avatar\"\r\n                  height=\"40\"\r\n                  width=\"40\"\r\n                />\r\n              ))}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Action\",\r\n        field: \"sortorder\",\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              {/* <Route\r\n                render={({ history }) => (\r\n                  <Eye\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"green\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/event/bennerPooja/viewBookEvent/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/event/bennerPooja/editBookEvent/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  async componentDidMount() {\r\n    // let { id } = this.props.match.params;\r\n\r\n    await axiosConfig.get(`/user/get_PoojaBanner`).then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`/admin/admin_dlt_event/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <div>\r\n          <Breadcrumbs\r\n            breadCrumbTitle=\"Puja Type\"\r\n            breadCrumbParent=\"Home\"\r\n            breadCrumbActive=\"Puja Type List\"\r\n          />\r\n\r\n          <Row className=\"app-user-list\">\r\n            <Col sm=\"12\"></Col>\r\n            <Col sm=\"12\">\r\n              <Card>\r\n                <Row className=\"m-2\">\r\n                  <Col>\r\n                    <h1 sm=\"6\" className=\"float-left\">\r\n                      Puja Type List\r\n                    </h1>\r\n                  </Col>\r\n                  <Col>\r\n                    <Route\r\n                      render={({ history }) => (\r\n                        <Button\r\n                          className=\" btn btn-success float-right\"\r\n                          onClick={() =>\r\n                            history.push(\r\n                              \"/app/event/bennerPooja/addBannerPooja\"\r\n                            )\r\n                          }\r\n                        >\r\n                          Add\r\n                        </Button>\r\n                      )}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <CardBody>\r\n                  {this.state.rowData === null ? null : (\r\n                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                      <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                        <div className=\"mb-1\">\r\n                          <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                            <DropdownToggle tag=\"div\">\r\n                              {this.gridApi\r\n                                ? this.state.currenPageSize\r\n                                : \"\" * this.state.getPageSize -\r\n                                  (this.state.getPageSize - 1)}{\" \"}\r\n                              -{\" \"}\r\n                              {this.state.rowData.length -\r\n                                this.state.currenPageSize *\r\n                                  this.state.getPageSize >\r\n                              0\r\n                                ? this.state.currenPageSize *\r\n                                  this.state.getPageSize\r\n                                : this.state.rowData.length}{\" \"}\r\n                              of {this.state.rowData.length}\r\n                              <ChevronDown className=\"ml-50\" size={15} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(20)}\r\n                              >\r\n                                20\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(50)}\r\n                              >\r\n                                50\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(100)}\r\n                              >\r\n                                100\r\n                              </DropdownItem>\r\n                              <DropdownItem\r\n                                tag=\"div\"\r\n                                onClick={() => this.filterSize(134)}\r\n                              >\r\n                                134\r\n                              </DropdownItem>\r\n                            </DropdownMenu>\r\n                          </UncontrolledDropdown>\r\n                        </div>\r\n                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                          <div className=\"table-input mr-1\">\r\n                            <Input\r\n                              placeholder=\"search...\"\r\n                              onChange={(e) =>\r\n                                this.updateSearchQuery(e.target.value)\r\n                              }\r\n                              value={this.state.value}\r\n                            />\r\n                          </div>\r\n                          <div className=\"export-btn\">\r\n                            <Button.Ripple\r\n                              color=\"primary\"\r\n                              onClick={() => this.gridApi.exportDataAsCsv()}\r\n                            >\r\n                              Export as CSV\r\n                            </Button.Ripple>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <ContextLayout.Consumer>\r\n                        {(context) => (\r\n                          <AgGridReact\r\n                            gridOptions={{}}\r\n                            rowSelection=\"multiple\"\r\n                            defaultColDef={defaultColDef}\r\n                            columnDefs={columnDefs}\r\n                            rowData={rowData}\r\n                            onGridReady={this.onGridReady}\r\n                            colResizeDefault={\"shift\"}\r\n                            animateRows={true}\r\n                            floatingFilter={false}\r\n                            pagination={true}\r\n                            paginationPageSize={this.state.paginationPageSize}\r\n                            pivotPanelShow=\"always\"\r\n                            enableRtl={context.state.direction === \"rtl\"}\r\n                          />\r\n                        )}\r\n                      </ContextLayout.Consumer>\r\n                    </div>\r\n                  )}\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default BannerPoojaList;\r\n"],"sourceRoot":""}