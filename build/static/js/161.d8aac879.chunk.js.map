{"version":3,"sources":["views/apps/blogmngment/blog/BlogList.js"],"names":["i","BlogList","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","cellRendererFramework","params","className","data","blog_title","filter","setColumnVisible","blogImg","map","src","alt","height","blogcategory","name","status","value","ReactHtmlParser","desc","render","history","size","color","onClick","push","_id","selectedData","gridApi","getSelectedRows","runthisfunction","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axiosConfig","get","then","response","console","log","id","error","this","sm","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/161.d8aac879.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\r\n//import classnames from \"classnames\";\r\n// import { history } from \"../../../../history\";\r\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\nimport \"../../../../assets/scss/pages/users.scss\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { Route } from \"react-router-dom\";\r\nclass BlogList extends React.Component {\r\n  state = {\r\n    rowData: [],\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n\r\n    columnDefs: [\r\n      {\r\n        headerName: \"S.No\",\r\n        valueGetter: \"node.rowIndex + 1\",\r\n        field: \"node.rowIndex + 1\",\r\n        width: 100,\r\n        // filter: true,\r\n        // checkboxSelection: true,\r\n        // headerCheckboxSelectionFilteredOnly: true,\r\n        // headerCheckboxSelection: true,\r\n      },\r\n\r\n      {\r\n        headerName: \"Title\",\r\n        field: \"blog_title\",\r\n        // filter: true,\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.blog_title}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Blog Image\",\r\n        field: \"blogImg\",\r\n        filter: false,\r\n        width: 200,\r\n        setColumnVisible: false,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              {params.data.blogImg.map((i) => (\r\n                <img\r\n                  className=\" rounded-circle  mr-3\"\r\n                  src={i}\r\n                  alt=\"user avatar\"\r\n                  height=\"40\"\r\n                  width=\"40\"\r\n                />\r\n              ))}\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Blog Category\",\r\n        field: \"blogcategory\",\r\n        // filter: true,\r\n        width: 250,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{params.data.blogcategory?.name}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 140,\r\n        cellRendererFramework: (params) => {\r\n          return params.data.status === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Deactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Description\",\r\n        field: \"desc\",\r\n        // filter: true,\r\n        width: 500,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <span>{ReactHtmlParser(params.data.desc)}</span>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"sortorder\",\r\n        width: 150,\r\n        cellRendererFramework: (params) => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Edit\r\n                    className=\"mr-50\"\r\n                    size=\"25px\"\r\n                    color=\"blue\"\r\n                    onClick={() =>\r\n                      history.push(\r\n                        `/app/blogmngment/blog/editBlog/${params.data._id}`\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Trash2\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"red\"\r\n                onClick={() => {\r\n                  let selectedData = this.gridApi.getSelectedRows();\r\n                  this.runthisfunction(params.data._id);\r\n                  this.gridApi.updateRowData({ remove: selectedData });\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(\"admin/getBlog\").then((response) => {\r\n      const rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n  async runthisfunction(id) {\r\n    console.log(id);\r\n    await axiosConfig.get(`admin/delBlog/${id}`).then(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  onGridReady = (params) => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = (val) => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = (val) => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Blog List\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button\r\n                        className=\"btn btn-success float-right\"\r\n                        onClick={() =>\r\n                          history.push(\"/app/blogmngment/blog/addBlog\")\r\n                        }\r\n                      >\r\n                        Add blog\r\n                      </Button>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={(e) =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {(context) => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default BlogList;\r\n"],"sourceRoot":""}