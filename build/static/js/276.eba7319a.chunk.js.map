{"version":3,"sources":["views/apps/pagesetup/notification/AddNotifi.js"],"names":["i","AddNotifi","props","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler1","e","status","target","value","changeHandler","name","submitHandler","preventDefault","payload","title","state","userid","axiosConfig","post","then","response","console","log","data","swal","history","push","catch","error","rowData","EditorState","createEmpty","get","sm","listTag","href","tag","active","className","col-sm-6","render","onClick","onSubmit","this","lg","md","required","type","placeholder","onChange","id","map","index","key","_id","fullname","toolbarClassName","wrapperClassName","editorClassName","toolbar","options","inline","bold","italic","underline","strikethrough","code","blockType","fontSize","fontFamily","Ripple","color","Component"],"mappings":"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","file":"static/js/276.eba7319a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nexport default class AddNotifi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      userid: \"\",\r\n      desc: \"\",\r\n      rowData: [],\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await axiosConfig.get(`/admin/alluser`).then((response) => {\r\n      let rowData = response.data.data;\r\n      console.log(rowData);\r\n      this.setState({ rowData });\r\n\r\n      // let newdata = rowData?.map((ele) => {\r\n      //   return ( label: { ele.fullname } )\r\n      // });\r\n\r\n      // console.log(\"new List \", newdata);\r\n    });\r\n  }\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    let payload = {\r\n      title: this.state.title,\r\n      desc: this.state.desc,\r\n      userid: this.state.userid,\r\n    };\r\n    axiosConfig\r\n      .post(\"admin/add_notification\", payload)\r\n\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/pagesetup/notification/notifiList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem\r\n                  href=\"/app/pagesetup/notification/notifiList\"\r\n                  tag=\"a\"\r\n                >\r\n                  Notification List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Add Notification</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Notification\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-success float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/pagesetup/notification/notifiList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"\"\r\n                    value={this.state.title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Select User</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    placeholder=\"\"\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col> */}\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <Label>Select User</Label>\r\n\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={this.state.userid}\r\n                    name=\"userid\"\r\n                    onChange={this.changeHandler}\r\n                    id=\"usreid\"\r\n                  >\r\n                    <option value=\"volvo\">Select User</option>\r\n\r\n                    {this.state.rowData?.map((value, index) => (\r\n                      <option key={index} value={value?._id}>\r\n                        {value?.fullname}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  {/* <Select\r\n                    className=\"React\"\r\n                    classNamePrefix=\"select\"\r\n                    defaultValue={this.state.rowData[1]}\r\n                    name=\"clear\"\r\n                    options={this.state.rowData}\r\n                    isClearable={true}\r\n                  /> */}\r\n                </Col>\r\n                <Row></Row>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Description</Label>\r\n                  <Editor\r\n                    toolbarClassName=\"demo-toolbar-absolute\"\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    editorState={this.state.editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      options: [\r\n                        \"inline\",\r\n                        \"blockType\",\r\n                        \"fontSize\",\r\n                        \"fontFamily\",\r\n                      ],\r\n                      inline: {\r\n                        options: [\r\n                          \"bold\",\r\n                          \"italic\",\r\n                          \"underline\",\r\n                          \"strikethrough\",\r\n                          \"monospace\",\r\n                        ],\r\n                        bold: { className: \"bordered-option-classname\" },\r\n                        italic: { className: \"bordered-option-classname\" },\r\n                        underline: { className: \"bordered-option-classname\" },\r\n                        strikethrough: {\r\n                          className: \"bordered-option-classname\",\r\n                        },\r\n                        code: { className: \"bordered-option-classname\" },\r\n                      },\r\n                      blockType: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontSize: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                      fontFamily: {\r\n                        className: \"bordered-option-classname\",\r\n                      },\r\n                    }}\r\n                  />\r\n                  <br />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}