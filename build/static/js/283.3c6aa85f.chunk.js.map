{"version":3,"sources":["views/apps/rashimanagement/rashi/EditRashi.js"],"names":["i","EditRashi","props","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","onEditorStateChange","editorState","setState","desc","draftToHtml","convertToRaw","getCurrentContent","changeHandler1","e","status","target","value","changeHandler","name","submitHandler","preventDefault","id","match","params","axiosConfig","post","state","then","console","log","swal","history","push","catch","rashi_title","date","EditorState","createEmpty","categoryT","get","this","category","breadCrumbTitle","breadCrumbParent","breadCrumbActive","className","col-sm-6","render","onClick","onSubmit","lg","md","sm","required","type","placeholder","onChange","map","allCategory","_id","key","title","wrapperClassName","editorClassName","toolbar","inline","inDropdown","list","textAlign","link","image","uploadCallback","previewImage","alt","present","mandatory","Ripple","color","Component"],"mappings":"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","file":"static/js/283.3c6aa85f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\nimport swal from \"sweetalert\";\r\nexport class EditRashi extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rashi_title: \"\",\r\n      date: \"\",\r\n      desc: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n    this.state = {\r\n      categoryT: [],\r\n    };\r\n  }\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n      xhr.setRequestHeader(\"Authorization\", \"Client-ID 7e1c3e366d22aa3\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        resolve(response);\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n      desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n    });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    axiosConfig\r\n      .get(\"/admin/getallCategory\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          categoryT: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/getoneRashi/${id}`)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          rashi_title: response.data.data.rashi_title,\r\n          category: response.data.data.category,\r\n          date: response.data.data.date,\r\n          desc: response.data.data.desc,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .post(`admin/updateRashi/${id}`, this.state)\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/rashimanagement/rashi/rashiList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Edit Rashi\"\r\n          breadCrumbParent=\" home\"\r\n          breadCrumbActive=\"Edit Rashi\"\r\n        />\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Edit Rashi\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() =>\r\n                      history.push(\"/app/rashimanagement/rashi/rashiList\")\r\n                    }\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"text\"\r\n                    name=\"rashi_title\"\r\n                    placeholder=\"Enter Title\"\r\n                    value={this.state.rashi_title}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"mb-2\">\r\n                  <Label>Date</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    // placeholder=\"Enter MRP\"\r\n                    value={this.state.date}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>Category</Label>\r\n\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    name=\"category\"\r\n                    value={this.state.category}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>select category</option>\r\n                    {this.state.categoryT?.map((allCategory) => (\r\n                      <option value={allCategory?._id} key={allCategory?._id}>\r\n                        {allCategory?.title}\r\n                      </option>\r\n                    ))}\r\n                  </CustomInput>\r\n                </Col>\r\n                <Col lg=\"12\" md=\"12\" sm=\"12\" className=\"mb-2\">\r\n                  <Label> Description</Label>\r\n\r\n                  <br />\r\n\r\n                  <Editor\r\n                    wrapperClassName=\"demo-wrapper\"\r\n                    editorClassName=\"demo-editor\"\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                      inline: { inDropdown: true },\r\n                      list: { inDropdown: true },\r\n                      textAlign: { inDropdown: true },\r\n                      link: { inDropdown: true },\r\n                      history: { inDropdown: true },\r\n                      image: {\r\n                        uploadCallback: this.uploadImageCallBack,\r\n                        previewImage: true,\r\n                        alt: { present: true, mandatory: true },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {/* <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                <Label className=\"mb-1\">Status</Label>\r\n                <div\r\n                  className=\"form-label-group\"\r\n                  onChange={(e) => this.changeHandler1(e)}\r\n                >\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Active\"\r\n                  />\r\n                  <span style={{ marginRight: \"20px\" }}>Active</span>\r\n\r\n                  <input\r\n                    style={{ marginRight: \"3px\" }}\r\n                    type=\"radio\"\r\n                    name=\"status\"\r\n                    value=\"Inactive\"\r\n                  />\r\n                  <span style={{ marginRight: \"3px\" }}>Inactive</span>\r\n                </div>\r\n              </Col> */}\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Update\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditRashi;\r\n"],"sourceRoot":""}