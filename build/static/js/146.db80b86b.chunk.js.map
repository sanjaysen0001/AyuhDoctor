{"version":3,"sources":["../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/Form.js","../node_modules/draftjs-to-html/lib/draftjs-to-html.js"],"names":["_excluded","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","children","node","hidden","check","for","tag","tagPropType","className","cssModule","object","xs","sm","md","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","props","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","length","React","createElement","_extends","inline","innerRef","func","Form","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Component","module","exports","obj","callback","key","hasOwnProperty","blockTypesMapping","unstyled","blockquote","code","getBlockTag","type","getBlockStyle","data","styles","value","concat","getStylesAtOffset","inlineStyles","COLOR","BGCOLOR","FONTSIZE","FONTFAMILY","UNDERLINE","ITALIC","BOLD","STRIKETHROUGH","CODE","SUBSCRIPT","SUPERSCRIPT","sameStyleAsPrevious","index","sameStyled","style","getEntityMarkup","entityMap","entityKey","text","customEntityTransform","entity","html","url","targetOption","alignment","src","alt","height","width","getInlineStyleSections","block","start","end","styleSections","Array","from","section","inlineStyleRanges","range","indexOf","substring","getStyleArrayForBlock","getInlineStyleSectionMarkup","styleSection","styleTagSections","styleSectionText","stylePropertySection","content","map","ch","join","getSectionText","addInlineStyleMarkup","getStyleTagSectionMarkup","styleString","test","addStylePropertyMarkup","getBlockInnerMarkup","hashtagConfig","blockMarkup","sections","lastOffset","sectionRanges","entityRanges","blockText","counter","startIndex","trigger","separator","substr","endIndex","hashtag","getHashtagRanges","sort","s1","s2","r","getSections","sectionText","entityInlineMarkup","undefined","getSectionMarkup","replacedText","replace","trimLeadingZeros","trimTrailingZeros","getListMarkup","listBlocks","directional","previousBlock","listHtml","nestedListBlock","nestedBlock","depth","blockStyle","editorContent","blocks","blockType","blockHtml","str","trim","isAtomicEntityBlock","blockTag","getBlockMarkup","factory"],"mappings":"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","file":"static/js/146.db80b86b.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"];\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.draftjsToHtml = factory());\n}(this, (function () { 'use strict';\n\n  /**\n  * Utility function to execute callback for eack key->value pair.\n  */\n  function forEach(obj, callback) {\n    if (obj) {\n      for (var key in obj) {\n        // eslint-disable-line no-restricted-syntax\n        if ({}.hasOwnProperty.call(obj, key)) {\n          callback(key, obj[key]);\n        }\n      }\n    }\n  }\n  /**\n  * The function returns true if the string passed to it has no content.\n  */\n\n  function isEmptyString(str) {\n    if (str === undefined || str === null || str.length === 0 || str.trim().length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n  * Mapping block-type to corresponding html tag.\n  */\n\n  var blockTypesMapping = {\n    unstyled: 'p',\n    'header-one': 'h1',\n    'header-two': 'h2',\n    'header-three': 'h3',\n    'header-four': 'h4',\n    'header-five': 'h5',\n    'header-six': 'h6',\n    'unordered-list-item': 'ul',\n    'ordered-list-item': 'ol',\n    blockquote: 'blockquote',\n    code: 'pre'\n  };\n  /**\n  * Function will return HTML tag for a block.\n  */\n\n  function getBlockTag(type) {\n    return type && blockTypesMapping[type];\n  }\n  /**\n  * Function will return style string for a block.\n  */\n\n  function getBlockStyle(data) {\n    var styles = '';\n    forEach(data, function (key, value) {\n      if (value) {\n        styles += \"\".concat(key, \":\").concat(value, \";\");\n      }\n    });\n    return styles;\n  }\n  /**\n  * The function returns an array of hashtag-sections in blocks.\n  * These will be areas in block which have hashtags applicable to them.\n  */\n\n  function getHashtagRanges(blockText, hashtagConfig) {\n    var sections = [];\n\n    if (hashtagConfig) {\n      var counter = 0;\n      var startIndex = 0;\n      var text = blockText;\n      var trigger = hashtagConfig.trigger || '#';\n      var separator = hashtagConfig.separator || ' ';\n\n      for (; text.length > 0 && startIndex >= 0;) {\n        if (text[0] === trigger) {\n          startIndex = 0;\n          counter = 0;\n          text = text.substr(trigger.length);\n        } else {\n          startIndex = text.indexOf(separator + trigger);\n\n          if (startIndex >= 0) {\n            text = text.substr(startIndex + (separator + trigger).length);\n            counter += startIndex + separator.length;\n          }\n        }\n\n        if (startIndex >= 0) {\n          var endIndex = text.indexOf(separator) >= 0 ? text.indexOf(separator) : text.length;\n          var hashtag = text.substr(0, endIndex);\n\n          if (hashtag && hashtag.length > 0) {\n            sections.push({\n              offset: counter,\n              length: hashtag.length + trigger.length,\n              type: 'HASHTAG'\n            });\n          }\n\n          counter += trigger.length;\n        }\n      }\n    }\n\n    return sections;\n  }\n  /**\n  * The function returns an array of entity-sections in blocks.\n  * These will be areas in block which have same entity or no entity applicable to them.\n  */\n\n\n  function getSections(block, hashtagConfig) {\n    var sections = [];\n    var lastOffset = 0;\n    var sectionRanges = block.entityRanges.map(function (range) {\n      var offset = range.offset,\n          length = range.length,\n          key = range.key;\n      return {\n        offset: offset,\n        length: length,\n        key: key,\n        type: 'ENTITY'\n      };\n    });\n    sectionRanges = sectionRanges.concat(getHashtagRanges(block.text, hashtagConfig));\n    sectionRanges = sectionRanges.sort(function (s1, s2) {\n      return s1.offset - s2.offset;\n    });\n    sectionRanges.forEach(function (r) {\n      if (r.offset > lastOffset) {\n        sections.push({\n          start: lastOffset,\n          end: r.offset\n        });\n      }\n\n      sections.push({\n        start: r.offset,\n        end: r.offset + r.length,\n        entityKey: r.key,\n        type: r.type\n      });\n      lastOffset = r.offset + r.length;\n    });\n\n    if (lastOffset < block.text.length) {\n      sections.push({\n        start: lastOffset,\n        end: block.text.length\n      });\n    }\n\n    return sections;\n  }\n  /**\n  * Function to check if the block is an atomic entity block.\n  */\n\n\n  function isAtomicEntityBlock(block) {\n    if (block.entityRanges.length > 0 && (isEmptyString(block.text) || block.type === 'atomic')) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * The function will return array of inline styles applicable to the block.\n  */\n\n\n  function getStyleArrayForBlock(block) {\n    var text = block.text,\n        inlineStyleRanges = block.inlineStyleRanges;\n    var inlineStyles = {\n      BOLD: new Array(text.length),\n      ITALIC: new Array(text.length),\n      UNDERLINE: new Array(text.length),\n      STRIKETHROUGH: new Array(text.length),\n      CODE: new Array(text.length),\n      SUPERSCRIPT: new Array(text.length),\n      SUBSCRIPT: new Array(text.length),\n      COLOR: new Array(text.length),\n      BGCOLOR: new Array(text.length),\n      FONTSIZE: new Array(text.length),\n      FONTFAMILY: new Array(text.length),\n      length: text.length\n    };\n\n    if (inlineStyleRanges && inlineStyleRanges.length > 0) {\n      inlineStyleRanges.forEach(function (range) {\n        var offset = range.offset;\n        var length = offset + range.length;\n\n        for (var i = offset; i < length; i += 1) {\n          if (range.style.indexOf('color-') === 0) {\n            inlineStyles.COLOR[i] = range.style.substring(6);\n          } else if (range.style.indexOf('bgcolor-') === 0) {\n            inlineStyles.BGCOLOR[i] = range.style.substring(8);\n          } else if (range.style.indexOf('fontsize-') === 0) {\n            inlineStyles.FONTSIZE[i] = range.style.substring(9);\n          } else if (range.style.indexOf('fontfamily-') === 0) {\n            inlineStyles.FONTFAMILY[i] = range.style.substring(11);\n          } else if (inlineStyles[range.style]) {\n            inlineStyles[range.style][i] = true;\n          }\n        }\n      });\n    }\n\n    return inlineStyles;\n  }\n  /**\n  * The function will return inline style applicable at some offset within a block.\n  */\n\n\n  function getStylesAtOffset(inlineStyles, offset) {\n    var styles = {};\n\n    if (inlineStyles.COLOR[offset]) {\n      styles.COLOR = inlineStyles.COLOR[offset];\n    }\n\n    if (inlineStyles.BGCOLOR[offset]) {\n      styles.BGCOLOR = inlineStyles.BGCOLOR[offset];\n    }\n\n    if (inlineStyles.FONTSIZE[offset]) {\n      styles.FONTSIZE = inlineStyles.FONTSIZE[offset];\n    }\n\n    if (inlineStyles.FONTFAMILY[offset]) {\n      styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];\n    }\n\n    if (inlineStyles.UNDERLINE[offset]) {\n      styles.UNDERLINE = true;\n    }\n\n    if (inlineStyles.ITALIC[offset]) {\n      styles.ITALIC = true;\n    }\n\n    if (inlineStyles.BOLD[offset]) {\n      styles.BOLD = true;\n    }\n\n    if (inlineStyles.STRIKETHROUGH[offset]) {\n      styles.STRIKETHROUGH = true;\n    }\n\n    if (inlineStyles.CODE[offset]) {\n      styles.CODE = true;\n    }\n\n    if (inlineStyles.SUBSCRIPT[offset]) {\n      styles.SUBSCRIPT = true;\n    }\n\n    if (inlineStyles.SUPERSCRIPT[offset]) {\n      styles.SUPERSCRIPT = true;\n    }\n\n    return styles;\n  }\n  /**\n  * Function returns true for a set of styles if the value of these styles at an offset\n  * are same as that on the previous offset.\n  */\n\n  function sameStyleAsPrevious(inlineStyles, styles, index) {\n    var sameStyled = true;\n\n    if (index > 0 && index < inlineStyles.length) {\n      styles.forEach(function (style) {\n        sameStyled = sameStyled && inlineStyles[style][index] === inlineStyles[style][index - 1];\n      });\n    } else {\n      sameStyled = false;\n    }\n\n    return sameStyled;\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n  function addInlineStyleMarkup(style, content) {\n    if (style === 'BOLD') {\n      return \"<strong>\".concat(content, \"</strong>\");\n    }\n\n    if (style === 'ITALIC') {\n      return \"<em>\".concat(content, \"</em>\");\n    }\n\n    if (style === 'UNDERLINE') {\n      return \"<ins>\".concat(content, \"</ins>\");\n    }\n\n    if (style === 'STRIKETHROUGH') {\n      return \"<del>\".concat(content, \"</del>\");\n    }\n\n    if (style === 'CODE') {\n      return \"<code>\".concat(content, \"</code>\");\n    }\n\n    if (style === 'SUPERSCRIPT') {\n      return \"<sup>\".concat(content, \"</sup>\");\n    }\n\n    if (style === 'SUBSCRIPT') {\n      return \"<sub>\".concat(content, \"</sub>\");\n    }\n\n    return content;\n  }\n  /**\n  * The function returns text for given section of block after doing required character replacements.\n  */\n\n  function getSectionText(text) {\n    if (text && text.length > 0) {\n      var chars = text.map(function (ch) {\n        switch (ch) {\n          case '\\n':\n            return '<br>';\n\n          case '&':\n            return '&amp;';\n\n          case '<':\n            return '&lt;';\n\n          case '>':\n            return '&gt;';\n\n          default:\n            return ch;\n        }\n      });\n      return chars.join('');\n    }\n\n    return '';\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n\n  function addStylePropertyMarkup(styles, text) {\n    if (styles && (styles.COLOR || styles.BGCOLOR || styles.FONTSIZE || styles.FONTFAMILY)) {\n      var styleString = 'style=\"';\n\n      if (styles.COLOR) {\n        styleString += \"color: \".concat(styles.COLOR, \";\");\n      }\n\n      if (styles.BGCOLOR) {\n        styleString += \"background-color: \".concat(styles.BGCOLOR, \";\");\n      }\n\n      if (styles.FONTSIZE) {\n        styleString += \"font-size: \".concat(styles.FONTSIZE).concat(/^\\d+$/.test(styles.FONTSIZE) ? 'px' : '', \";\");\n      }\n\n      if (styles.FONTFAMILY) {\n        styleString += \"font-family: \".concat(styles.FONTFAMILY, \";\");\n      }\n\n      styleString += '\"';\n      return \"<span \".concat(styleString, \">\").concat(text, \"</span>\");\n    }\n\n    return text;\n  }\n  /**\n  * Function will return markup for Entity.\n  */\n\n  function getEntityMarkup(entityMap, entityKey, text, customEntityTransform) {\n    var entity = entityMap[entityKey];\n\n    if (typeof customEntityTransform === 'function') {\n      var html = customEntityTransform(entity, text);\n\n      if (html) {\n        return html;\n      }\n    }\n\n    if (entity.type === 'MENTION') {\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" class=\\\"wysiwyg-mention\\\" data-mention data-value=\\\"\").concat(entity.data.value, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'LINK') {\n      var targetOption = entity.data.targetOption || '_self';\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" target=\\\"\").concat(targetOption, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'IMAGE') {\n      var alignment = entity.data.alignment;\n\n      if (alignment && alignment.length) {\n        return \"<div style=\\\"text-align:\".concat(alignment, \";\\\"><img src=\\\"\").concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/></div>\");\n      }\n\n      return \"<img src=\\\"\".concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/>\");\n    }\n\n    if (entity.type === 'EMBEDDED_LINK') {\n      return \"<iframe width=\\\"\".concat(entity.data.width, \"\\\" height=\\\"\").concat(entity.data.height, \"\\\" src=\\\"\").concat(entity.data.src, \"\\\" frameBorder=\\\"0\\\"></iframe>\");\n    }\n\n    return text;\n  }\n  /**\n  * For a given section in a block the function will return a further list of sections,\n  * with similar inline styles applicable to them.\n  */\n\n\n  function getInlineStyleSections(block, styles, start, end) {\n    var styleSections = [];\n    var text = Array.from(block.text);\n\n    if (text.length > 0) {\n      var inlineStyles = getStyleArrayForBlock(block);\n      var section;\n\n      for (var i = start; i < end; i += 1) {\n        if (i !== start && sameStyleAsPrevious(inlineStyles, styles, i)) {\n          section.text.push(text[i]);\n          section.end = i + 1;\n        } else {\n          section = {\n            styles: getStylesAtOffset(inlineStyles, i),\n            text: [text[i]],\n            start: i,\n            end: i + 1\n          };\n          styleSections.push(section);\n        }\n      }\n    }\n\n    return styleSections;\n  }\n  /**\n  * Replace leading blank spaces by &nbsp;\n  */\n\n\n  function trimLeadingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = 0; i < replacedText.length; i += 1) {\n        if (sectionText[i] === ' ') {\n          replacedText = replacedText.replace(' ', '&nbsp;');\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * Replace trailing blank spaces by &nbsp;\n  */\n\n  function trimTrailingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = replacedText.length - 1; i >= 0; i -= 1) {\n        if (replacedText[i] === ' ') {\n          replacedText = \"\".concat(replacedText.substring(0, i), \"&nbsp;\").concat(replacedText.substring(i + 1));\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  * like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.\n  */\n\n  function getStyleTagSectionMarkup(styleSection) {\n    var styles = styleSection.styles,\n        text = styleSection.text;\n    var content = getSectionText(text);\n    forEach(styles, function (style, value) {\n      content = addInlineStyleMarkup(style, content);\n    });\n    return content;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  like color, background-color, font-size are applicable.\n  */\n\n\n  function getInlineStyleSectionMarkup(block, styleSection) {\n    var styleTagSections = getInlineStyleSections(block, ['BOLD', 'ITALIC', 'UNDERLINE', 'STRIKETHROUGH', 'CODE', 'SUPERSCRIPT', 'SUBSCRIPT'], styleSection.start, styleSection.end);\n    var styleSectionText = '';\n    styleTagSections.forEach(function (stylePropertySection) {\n      styleSectionText += getStyleTagSectionMarkup(stylePropertySection);\n    });\n    styleSectionText = addStylePropertyMarkup(styleSection.styles, styleSectionText);\n    return styleSectionText;\n  }\n  /*\n  * The method returns markup for an entity section.\n  * An entity section is a continuous section in a block\n  * to which same entity or no entity is applicable.\n  */\n\n\n  function getSectionMarkup(block, entityMap, section, customEntityTransform) {\n    var entityInlineMarkup = [];\n    var inlineStyleSections = getInlineStyleSections(block, ['COLOR', 'BGCOLOR', 'FONTSIZE', 'FONTFAMILY'], section.start, section.end);\n    inlineStyleSections.forEach(function (styleSection) {\n      entityInlineMarkup.push(getInlineStyleSectionMarkup(block, styleSection));\n    });\n    var sectionText = entityInlineMarkup.join('');\n\n    if (section.type === 'ENTITY') {\n      if (section.entityKey !== undefined && section.entityKey !== null) {\n        sectionText = getEntityMarkup(entityMap, section.entityKey, sectionText, customEntityTransform); // eslint-disable-line max-len\n      }\n    } else if (section.type === 'HASHTAG') {\n      sectionText = \"<a href=\\\"\".concat(sectionText, \"\\\" class=\\\"wysiwyg-hashtag\\\">\").concat(sectionText, \"</a>\");\n    }\n\n    return sectionText;\n  }\n  /**\n  * Function will return the markup for block preserving the inline styles and\n  * special characters like newlines or blank spaces.\n  */\n\n\n  function getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform) {\n    var blockMarkup = [];\n    var sections = getSections(block, hashtagConfig);\n    sections.forEach(function (section, index) {\n      var sectionText = getSectionMarkup(block, entityMap, section, customEntityTransform);\n\n      if (index === 0) {\n        sectionText = trimLeadingZeros(sectionText);\n      }\n\n      if (index === sections.length - 1) {\n        sectionText = trimTrailingZeros(sectionText);\n      }\n\n      blockMarkup.push(sectionText);\n    });\n    return blockMarkup.join('');\n  }\n  /**\n  * Function will return html for the block.\n  */\n\n  function getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var blockHtml = [];\n\n    if (isAtomicEntityBlock(block)) {\n      blockHtml.push(getEntityMarkup(entityMap, block.entityRanges[0].key, undefined, customEntityTransform));\n    } else {\n      var blockTag = getBlockTag(block.type);\n\n      if (blockTag) {\n        blockHtml.push(\"<\".concat(blockTag));\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          blockHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          blockHtml.push(' dir = \"auto\"');\n        }\n\n        blockHtml.push('>');\n        blockHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        blockHtml.push(\"</\".concat(blockTag, \">\"));\n      }\n    }\n\n    blockHtml.push('\\n');\n    return blockHtml.join('');\n  }\n\n  /**\n  * Function to check if a block is of type list.\n  */\n\n  function isList(blockType) {\n    return blockType === 'unordered-list-item' || blockType === 'ordered-list-item';\n  }\n  /**\n  * Function will return html markup for a list block.\n  */\n\n  function getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var listHtml = [];\n    var nestedListBlock = [];\n    var previousBlock;\n    listBlocks.forEach(function (block) {\n      var nestedBlock = false;\n\n      if (!previousBlock) {\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.type !== block.type) {\n        listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.depth === block.depth) {\n        if (nestedListBlock && nestedListBlock.length > 0) {\n          listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n          nestedListBlock = [];\n        }\n      } else {\n        nestedBlock = true;\n        nestedListBlock.push(block);\n      }\n\n      if (!nestedBlock) {\n        listHtml.push('<li');\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          listHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          listHtml.push(' dir = \"auto\"');\n        }\n\n        listHtml.push('>');\n        listHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        listHtml.push('</li>\\n');\n        previousBlock = block;\n      }\n    });\n\n    if (nestedListBlock && nestedListBlock.length > 0) {\n      listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n    }\n\n    listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n    return listHtml.join('');\n  }\n\n  /**\n  * The function will generate html markup for given draftjs editorContent.\n  */\n\n  function draftToHtml(editorContent, hashtagConfig, directional, customEntityTransform) {\n    var html = [];\n\n    if (editorContent) {\n      var blocks = editorContent.blocks,\n          entityMap = editorContent.entityMap;\n\n      if (blocks && blocks.length > 0) {\n        var listBlocks = [];\n        blocks.forEach(function (block) {\n          if (isList(block.type)) {\n            listBlocks.push(block);\n          } else {\n            if (listBlocks.length > 0) {\n              var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, customEntityTransform); // eslint-disable-line max-len\n\n              html.push(listHtml);\n              listBlocks = [];\n            }\n\n            var blockHtml = getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform);\n            html.push(blockHtml);\n          }\n        });\n\n        if (listBlocks.length > 0) {\n          var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform); // eslint-disable-line max-len\n\n          html.push(listHtml);\n          listBlocks = [];\n        }\n      }\n    }\n\n    return html.join('');\n  }\n\n  return draftToHtml;\n\n})));\n"],"sourceRoot":""}